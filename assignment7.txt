Q1. What is the name of the feature responsible for generating Regex objects?
Ans1 - The re.compile() function returns Regex object.

Q2. Why do raw strings often appear in Regex objects?

Ans2 -Raw strings are used so that backslashes do not have to be escaped. In normal string \n, \t is treated as new line and tab but when we create raw string then Raw strings treat backslash as a literal character.

Q3. What is the return value of the search() method?

Ans3 - The serach() function search the string for a match, and return a Match Object if there is a match.
if there is more than one match, only the first occurrence  of the match will be returned.

Q4. From a Match item, how do you get the actual strings that match the pattern?

Ans4 - when we search the string then it will return a match object and the group() method returns strings of the matched text.

Q5. In the regex which created from the r'(\d\d\d)-(\d\d\d-\d\d\d\d)', what does group zero cover?Group 2? Group 1?

Ans5.-In the regex which created from the r'(\d\d\d)-(\d\d\d-\d\d\d\d)' Group 0 is the entire match, group 1 covers the first set of parentheses, and group 2 covers the second set of parentheses. 
for example - in parentheses (123)-(456-7891) Group(0) will be = '123-456-7891'  and group(1) will be ='123' and group(2) will be = '456-7891'


Q6. In standard expression syntax, parentheses and intervals have distinct meanings. How can you tell
a regex that you want it to fit real parentheses and periods?

Ans6.- for this periods and parentheses can be escaped with backslash \, \(,and\).

Q7. The findall() method returns a string list or a list of string tuples. What causes it to return one of the two options?


Ans7 - If the regex has no groups, a list of strings is returned. If the regex has groups, a list of tuples of strings is returned.

Q8. In standard expressions, what does the | character mean?

Ans8. - The | character means signifies matching "either, or" between two groups. | symbol works as the or operator meaning it checks whether the pattern before or after the or symbol is present in the string or not

Q9. In regular expressions, what does the character stand for?

Ans9.- The '?' character means match zero or one occurance for the precding group.

Q10.In regular expressions, what is the difference between the + and * characters?

Ans10. - The + matches for one or more occurrences and * matches zero or more occurrences.

Q11. What is the difference between {4} and {4,5} in regular expression?

Ans11. - The {3} matches exactly three instances of the preceding group. The {3,5} matches between three and five instances.

Q12. What do you mean by the \d, \w, and \s shorthand character classes signify in regular expressions?

Ans12. - here \d returns a match where the string contains digits (numbers from 0-9), \w returns a match where the string contains any word characters (characters from a to Z, digits from 0-9, and the underscore _ character) and \s returns a match where the string contains a white space character.

Q13. What do means by \D, \W, and \S shorthand character classes signify in regular expressions?

Ans13. - Here \D returns a match where the string DOES NOT contain digits,
\W Returns a match where the string DOES NOT contain any word characters or matches any non-alphanumeric character and \S 	returns a match where the string DOES NOT contain a white space character


Q14. What is the difference between .*? and .*?

Ans14. - .* it represent the dot matches any character and asterisk modifies whatever comes before it so that it matches zero, one or more of it. Since a dot came before it, it matches zero, one or more of any character. 

and .*? here dot and asterisk have same meaning and question mark after an asterisk makes it continue to match until it can make the next match. Without the question mark, it would make as many matches as possible while still matching what comes after it.

Q15. What is the syntax for matching both numbers and lowercase letters with a character class?

Ans15. - The syntax is used for this Either [0-9a-z] or [a-z0-9]

Q16. What is the procedure for making a normal expression in regax case insensitive?

Ans16. -Passing re.I or re.IGNORECASE as the second argument to re.compile() will make the matching case insensitive.

17. What does the . character normally match? What does it match if re.DOTALL is passed as 2nd
argument in re.compile()?

Ans.17 -The . character normally matches any character except the newline character. If re.DOTALL is passed as the second argument to re.compile(), then the dot will also match newline characters.

Q18. If numReg = re.compile(r'\d+'), what will numRegex.sub('X', '11 drummers, 10 pipers, five rings, 4
hen') return?

Ans.18 - it will  return -'X drummers, X pipers, five rings, X hens'

Q19. What does passing re.VERBOSE as the 2nd argument to re.compile() allow to do?

Ans19. - The re.VERBOSE argument allows you to add whitespace and comments to the string passed to re.compile().

Q20. How would you write a regex that match a number with comma for every three digits? It must
match the given following:
'42'
'1,234'
'6,368,745'
but not following:
'12,34,567'(which has only two digits between the commas)
'1234'(which lacks commas)

Ans20.- here re.compile(r'^\d{1,3}(,\d{3})*$') will create this regex, but other regex strings can produce a similar regular expression.

Q21. How would you write a regex that matches the full name of someone whose last name is
Watanabe? You can assume that the first name that comes before it will always be one word that
begins with a capital letter. The regex must match the following:
'Haruto Watanabe'
'Alice Watanabe'
'RoboCop Watanabe'
but not the following:
'haruto Watanabe' (where the first name is not capitalized)
'Mr. Watanabe' (where the preceding word has a nonletter character)
'Watanabe' (which has no first name)
'Haruto watanabe' (where Watanabe is not capitalized)

Ans21.- regex =re.compile(r'[A-Z][a-z]*\sWatanabe')


Q22. How would you write a regex that matches a sentence where the first word is either Alice, Bob,
or Carol; the second word is either eats, pets, or throws; the third word is apples, cats, or baseballs;
and the sentence ends with a period? This regex should be case-insensitive. It must match the
following:
'Alice eats apples.'

'Bob pets cats.'

'Carol throws baseballs.'

'Alice throws Apples.'

'BOB EATS CATS.'

but not the following:

'Robocop eats apples.'

'ALICE THROWS FOOTBALLS.'

'Carol eats 7 cats.'

ANs22. - regex = re.compile(r'(Alice|Bob|Carol)\s(eats|pets|throws)\s(apples|cats|baseballs)\.',re.IGONRECASE)